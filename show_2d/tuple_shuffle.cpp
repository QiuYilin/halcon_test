///////////////////////////////////////////////////////////////////////////////
// File generated by HDevelop for HALCON/C++ Version 23.05.0.0
// Non-ASCII strings in this file are encoded in local-8-bit encoding (cp936).
// Ensure that the interface encoding is set to locale encoding by calling
// SetHcppInterfaceStringEncodingIsUtf8(false) at the beginning of the program.
// 
// Please note that non-ASCII characters in string constants are exported
// as octal codes in order to guarantee that the strings are correctly
// created on all systems, independent on any compiler settings.
// 
// Source files with different encoding should not be mixed in one project.
///////////////////////////////////////////////////////////////////////////////

#include "HalconCpp.h"
#include "HDevThread.h"



using namespace HalconCpp;


// Chapter: Tuple / Element Order
// Short Description: Sort the elements of a tuple randomly. 
void tuple_shuffle (HTuple hv_Tuple, HTuple *hv_Shuffled)
{

  // Local iconic variables

  // Local control variables
  HTuple  hv_ShuffleIndices;

  //This procedure sorts the input tuple randomly.
  //
  if (0 != (int((hv_Tuple.TupleLength())>0)))
  {
    //Create a tuple of random numbers,
    //sort this tuple, and return the indices
    //of this sorted tuple.
    hv_ShuffleIndices = HTuple::TupleRand(hv_Tuple.TupleLength()).TupleSortIndex();
    //Assign the elements of Tuple
    //to these random positions.
    (*hv_Shuffled) = HTuple(hv_Tuple[hv_ShuffleIndices]);
  }
  else
  {
    //If the input tuple is empty,
    //an empty tuple should be returned.
    (*hv_Shuffled) = HTuple();
  }
  return;
}
